{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pm/./apps/pm-backend/src/config/database.js","webpack://pm/./apps/pm-backend/src/controllers/admin.js","webpack://pm/./apps/pm-backend/src/controllers/conversations.js","webpack://pm/./apps/pm-backend/src/controllers/interests.js","webpack://pm/./apps/pm-backend/src/controllers/recommendations.js","webpack://pm/./apps/pm-backend/src/controllers/search.js","webpack://pm/./apps/pm-backend/src/controllers/shortlist.js","webpack://pm/./apps/pm-backend/src/controllers/users.js","webpack://pm/./apps/pm-backend/src/middleware/async.js","webpack://pm/./apps/pm-backend/src/middleware/error.js","webpack://pm/./apps/pm-backend/src/models/Users.js","webpack://pm/./apps/pm-backend/src/routes/admin.js","webpack://pm/./apps/pm-backend/src/routes/conversations.js","webpack://pm/./apps/pm-backend/src/routes/interests.js","webpack://pm/./apps/pm-backend/src/routes/recommendations.js","webpack://pm/./apps/pm-backend/src/routes/search.js","webpack://pm/./apps/pm-backend/src/routes/shortlist.js","webpack://pm/./apps/pm-backend/src/routes/users.js","webpack://pm/./apps/pm-backend/src/utilities/errorResponse.js","webpack://pm/external commonjs \"@okta/okta-sdk-nodejs\"","webpack://pm/external commonjs \"@sentry/node\"","webpack://pm/external commonjs \"@sentry/tracing\"","webpack://pm/external commonjs \"body-parser\"","webpack://pm/external commonjs \"cors\"","webpack://pm/external commonjs \"express\"","webpack://pm/external commonjs \"mongoose\"","webpack://pm/external commonjs \"tslib\"","webpack://pm/webpack/bootstrap","webpack://pm/./apps/pm-backend/src/main.js"],"sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst dbConnection = async () => {\r\n  console.log('Connecting to mongoDB...');\r\n  const connection = await mongoose.connect(process.env.MONGO_URI, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n  });\r\n  console.log(`MongoDB connection successful !`);\r\n};\r\n\r\nmodule.exports = dbConnection;\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\nconst okta = require('@okta/okta-sdk-nodejs');\r\n\r\n//getting all users profiles\r\nexports.getAllUsersProfiles = asyncHandler(async (req, res, next) => {\r\n  try {\r\n    const allUsers = await User.find();\r\n    res.status(200).json({ user: allUsers });\r\n  } catch (error) {\r\n    return next(new CustomErrorResponse('Error! Please try later', 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\nconst mongoose = require('mongoose');\r\n\r\n// @desc   Send a New Message\r\n// @route  POST /api/v1/conversations?receiver=\"receiverID\"&sender=\"senderID\"\r\n// @access Private\r\n// In One go...the message sent MUST be in \"conversations\" array of both user1 and user2.\r\n// Otherwise, consider that attempt to send message as failure. So a MongoDB/Mongoose Transaction must be used.\r\nexports.sendMessage = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.sender;\r\n  const oktaUserId2 = req.query.receiver;\r\n  // I want the message object to have SAME _id in both users\r\n  // This will help me to enable read receipts\r\n\r\n  const message = {\r\n    message: req.body.message,\r\n    messageSenderId: oktaUserId1,\r\n    messageReceiverId: oktaUserId2,\r\n    isRead: false,\r\n  };\r\n\r\n  console.log(message);\r\n\r\n  const session = await User.startSession();\r\n\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n\r\n    /**=============================================================== */\r\n    // User1 wants to send Message to User2\r\n\r\n    // NOTE: Messages are stored in an interest object's conversations property(array).\r\n\r\n    // STEP 1\r\n    // Determine if it is User1 who first sent the interest.\r\n    const didUser1SendInterestToUser2 = user1.interestsSent.some(\r\n      (interest) => String(interest.interestReceiverId) === oktaUserId2\r\n    );\r\n    // Determine if it is User1 who first received the interest.\r\n    const didUser1ReceiveInterestFromUser2 = user1.interestsReceived.some((interest) =>\r\n      String(interest.interestSenderId === oktaUserId2)\r\n    );\r\n    // If User1 is the first sender, then interest object will be in interestsSent Array\r\n    // If User1 is the first receiver, then interest object will be in interestsReceived Array\r\n    // Based on the location of interest object, update its conversations array...\r\n    if (didUser1SendInterestToUser2) {\r\n      // if user1 is the interest sender. So update interest object in interestsSent array of user 1\r\n      user1.interestsSent = user1.interestsSent.map((interest) => {\r\n        if (String(interest.interestReceiverId) === oktaUserId2) {\r\n          interest.conversations.push(message);\r\n        }\r\n        return interest;\r\n      });\r\n      // if user1 is the interest sender, then user2 is interest receiver.\r\n      // so interest object will be in user2's interestsReceived array\r\n      user2.interestsReceived = user2.interestsReceived.map((interest) => {\r\n        if (String(interest.interestSenderId) === oktaUserId1) {\r\n          interest.conversations.push(message);\r\n        }\r\n        return interest;\r\n      });\r\n    } else if (didUser1ReceiveInterestFromUser2) {\r\n      // user1 is interest receiver. Hence, update interest object in interestsReceived array of user1\r\n      user1.interestsReceived = user1.interestsReceived.map((interest) => {\r\n        if (String(interest.interestSenderId) === oktaUserId2) {\r\n          interest.conversations.push(message);\r\n        }\r\n        return interest;\r\n      });\r\n      // if user1 is the interest receiver.\r\n      // then user2 is the interest sender. So update interest object in interestsSent array of user2\r\n      user2.interestsSent = user2.interestsSent.map((interest) => {\r\n        if (String(interest.interestReceiverId) === oktaUserId1) {\r\n          interest.conversations.push(message);\r\n        }\r\n        return interest;\r\n      });\r\n    } else {\r\n      // If interest object is not present in both, then message cant be sent.\r\n      throw `Permission denied.`;\r\n    }\r\n    /**=============================================================== */\r\n    await user1.save();\r\n    await user2.save();\r\n\r\n    await session.commitTransaction();\r\n    session.endSession();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Message sent !',\r\n    });\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Message not sent! Please try later', 500));\r\n  }\r\n});\r\n\r\n// @desc   Mark all messages between two users as \"Read\"\r\n// @route  PUT /api/v1/conversations?user1=\"oktaUserId1\"&user2=\"oktaUserId2\"\r\n// @access Private\r\nexports.markMessagesAsRead = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.user1;\r\n  const oktaUserId2 = req.query.user2;\r\n\r\n  const session = await User.startSession();\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n\r\n    // STEP 1\r\n    // Determine if it is User1 who first sent the interest.\r\n    const didUser1SendInterestToUser2 = user1.interestsSent.some(\r\n      (interest) => String(interest.interestReceiverId) === oktaUserId2\r\n    );\r\n    // Determine if it is User1 who first received the interest.\r\n    const didUser1ReceiveInterestFromUser2 = user1.interestsReceived.some((interest) =>\r\n      String(interest.interestSenderId === oktaUserId2)\r\n    );\r\n\r\n    if (didUser1SendInterestToUser2) {\r\n      // if User1 sent interest to User2, then...\r\n      // 1. Identify the interest object specific to user2 in interestsSent array of user1\r\n      // 2. Then update the conversations array of that object, mark all messages as read.\r\n      // 3. Also, find the interest object specific to user 1 in interestsReceived array of user2\r\n      // 4. Update conversations array of that object by marking all messages as read.\r\n      user1.interestsSent = user1.interestsSent.map((interest) => {\r\n        if (String(interest.interestReceiverId) === user2.oktaUserId) {\r\n          // marking all unread messages as read.\r\n          interest.conversations = interest.conversations.map((message) => {\r\n            if (!message.isRead) {\r\n              message.isRead = true;\r\n            }\r\n            return message;\r\n          });\r\n        }\r\n        return interest;\r\n      });\r\n\r\n      user2.interestsReceived = user2.interestsReceived.map((interest) => {\r\n        if (String(interest.interestSenderId) === user1.oktaUserId) {\r\n          // marking all messages as read.\r\n          interest.conversations = interest.conversations.map((message) => {\r\n            if (!message.isRead) {\r\n              message.isRead = true;\r\n            }\r\n            return message;\r\n          });\r\n        }\r\n        return interest;\r\n      });\r\n    } else if (didUser1ReceiveInterestFromUser2) {\r\n      // if User1 sent received interest from User2, then...\r\n      // 1. Identify the interest object specific to user2 in interestsReceived array of user1\r\n      // 2. Then update the conversations array of that object, mark all messages as read.\r\n      // 3. Also, find the interest object specific to user 1 in interestsSent array of user2\r\n      // 4. Update conversations array of that object by marking all messages as read.\r\n      user1.interestsReceived = user1.interestsReceived.map((interest) => {\r\n        if (String(interest.interestSenderId) === user2.oktaUserId) {\r\n          // marking all messages as read.\r\n          interest.conversations = interest.conversations.map((message) => {\r\n            if (!message.isRead) {\r\n              message.isRead = true;\r\n            }\r\n            return message;\r\n          });\r\n        }\r\n        return interest;\r\n      });\r\n\r\n      user2.interestsSent = user2.interestsSent.map((interest) => {\r\n        if (String(interest.interestReceiverId) === user1.oktaUserId) {\r\n          interest.conversations = interest.conversations.map((message) => {\r\n            // marking all messages as read.\r\n            if (!message.isRead) {\r\n              message.isRead = true;\r\n            }\r\n            return message;\r\n          });\r\n        }\r\n        return interest;\r\n      });\r\n    } else {\r\n      throw 'Permission denied.';\r\n    }\r\n\r\n    await user1.save();\r\n    await user2.save();\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Error! Please try later', 500));\r\n  }\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    message: 'Messages marked as read !',\r\n  });\r\n});\r\n\r\n// @desc   Get all messages between two users as \"Read\"\r\n// @route  GET /api/v1/conversations/:oktaUserId\r\n// @access Private\r\n\r\nexports.getMessages = asyncHandler(async (req, res, next) => {\r\n  try {\r\n    let user = await User.find({ oktaUserId: req.params.oktaUserId });\r\n    user = user[0];\r\n\r\n    console.log(user);\r\n    if (!user) {\r\n      return next(new CustomErrorResponse(`User not found!`, 404));\r\n    }\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Data Retrieved Successfull !',\r\n      interestsReceived: [...user.interestsReceived],\r\n      interestsSent: [...user.interestsSent],\r\n    });\r\n  } catch (error) {\r\n    return next(new CustomErrorResponse(`Error! Please try later`, 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\nconst mongoose = require('mongoose');\r\n\r\n// @desc   Send a New Interest\r\n// @route  POST /api/v1/interests?sender=oktaUserId1&receiver=oktaUserId2\r\n// @access Private\r\n\r\n// In One go...the interest sent MUST be in \"interestsSent\" array of Sender and \"interestsReceived\" array of Receiver.\r\n// Otherwise, consider that attempt to send interest as failure. So a MongoDB/Mongoose Transaction must be used.\r\n\r\nexports.sendInterest = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.sender;\r\n  const oktaUserId2 = req.query.receiver;\r\n  const session = await User.startSession();\r\n\r\n  console.log('oktaUserId1 ', oktaUserId1);\r\n  console.log('oktaUserId2 ', oktaUserId2);\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n\r\n    /**=============================================================== */\r\n    // User1 wants to send Interest to User2\r\n\r\n    // NOTE: Interests are stored as objects in interestsSender array of Sender(User1)\r\n    // & also in interestsReceived array of Receiver(User2).\r\n\r\n    // Step 1: Determine if User1 already send or received interest to/from User 2 ?\r\n    // If Yes, then throw error that You've already sent/received interest to User 2\r\n\r\n    // Checking interestsSent and interestsReceived array of User1\r\n    const didUser1AlreadySendInterestToUser2 = user1.interestsSent.some(\r\n      (interest) => interest.interestReceiverId === oktaUserId2\r\n    );\r\n\r\n    console.log('didUser1AlreadySendInterestToUser2', didUser1AlreadySendInterestToUser2);\r\n    if (didUser1AlreadySendInterestToUser2) {\r\n      await session.abortTransaction();\r\n      session.endSession();\r\n      console.log(\"sending error message to frontend....\")\r\n      return next(\r\n        new CustomErrorResponse(\r\n          `Interest already sent to ${user2.name}. Please wait for response. If your interest was accepted before, this profile is already in \"Accepted\" list. Please check.`,\r\n          400\r\n        )\r\n      );\r\n    }\r\n\r\n    const didUser1AlreadyReceiveInterestFromUser2 = user1.interestsReceived.some(\r\n      (interest) => interest.interestSenderId === oktaUserId2\r\n    );\r\n\r\n    console.log('didUser1AlreadyReceiveInterestFromUser2', didUser1AlreadyReceiveInterestFromUser2);\r\n    if (didUser1AlreadyReceiveInterestFromUser2) {\r\n      await session.abortTransaction();\r\n      session.endSession();\r\n      return next(\r\n        new CustomErrorResponse(\r\n          `Interest already received from ${user2.name}. Please respond to it. If you've already accepted her interest, please check \"Accepted\" list.`,\r\n          400\r\n        )\r\n      );\r\n    }\r\n\r\n    const maleImagePlaceholder = `https://res.cloudinary.com/pesto-matrimony/image/upload/v1662374871/e0kfqgvenrb2mhpzya4a.png`;\r\n    const femaleImagePlaceholder = `https://res.cloudinary.com/pesto-matrimony/image/upload/v1662458482/tufqrbcs4pnkwcukvynw.png`;\r\n\r\n    // If Not sent Interest before, then...\r\n    // put the interest object in interestsSent array of User1\r\n    user1.interestsSent.push({\r\n      conversations: [],\r\n      interestSenderAge: user1.age,\r\n      interestSenderId: user1.oktaUserId,\r\n      interestSenderImage: user1.images[0] || user1.gender === 'male' ? maleImagePlaceholder : femaleImagePlaceholder,\r\n      interestSenderName: user1.name,\r\n      interestReceiverAge: user2.age,\r\n      interestReceiverId: user2.oktaUserId,\r\n      interestReceiverImage: user2.images[0] || user2.gender === 'male' ? maleImagePlaceholder : femaleImagePlaceholder,\r\n      interestReceiverName: user2.name,\r\n      isAccepted: false,\r\n      isRejected: false,\r\n    });\r\n\r\n    // Also...\r\n    // Put the same interest object in interestsReceived array of User2\r\n    user2.interestsReceived.push({\r\n      conversations: [],\r\n      interestSenderAge: user1.age,\r\n      interestSenderId: user1.oktaUserId,\r\n      interestSenderImage: user1.images[0] || user1.gender === 'male' ? maleImagePlaceholder : femaleImagePlaceholder,\r\n      interestSenderName: user1.name,\r\n      interestReceiverAge: user2.age,\r\n      interestReceiverId: user2.oktaUserId,\r\n      interestReceiverImage: user2.images[0] || user2.gender === 'male' ? maleImagePlaceholder : femaleImagePlaceholder,\r\n      interestReceiverName: user2.name,\r\n      isAccepted: false,\r\n      isRejected: false,\r\n    });\r\n\r\n    /**=============================================================== */\r\n    await user1.save();\r\n    await user2.save();\r\n\r\n    await session.commitTransaction();\r\n    session.endSession();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Interest sent!',\r\n    });\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Interest not sent. Please try later!', 500));\r\n  }\r\n});\r\n\r\n// @desc   Accept an Interest\r\n// @route  PUT /api/v1/interests/accept?sender=oktaUserId1&receiver=oktaUserId2\r\n// @access Private\r\n\r\n// In One go... isAccepted property in interest object must be updated to \"true\" for\r\n// both sender and receiver.\r\n// User1 is interest Sender. Interest object will be in interestsSent array of User 1\r\n// User2 is interest Receiver. Interest object will be in interestsReceived array of User 2\r\n// User2 can accept interest. Because User2 \"received\" the interest.\r\n// When he does that... update isAccepted to \"true\" for both\r\nexports.acceptInterest = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.sender;\r\n  const oktaUserId2 = req.query.receiver;\r\n  const session = await User.startSession();\r\n\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n    /**=============================================================== */\r\n\r\n    user2.interestsReceived = user2.interestsReceived.map((interest) => {\r\n      // First identify the interest object which must be updated.\r\n      if (String(interest.interestSenderId) === user1.oktaUserId) {\r\n        interest.isAccepted = true;\r\n      }\r\n      return interest;\r\n    });\r\n\r\n    // Also...\r\n    // Put update same interest object in interestsSent array of User1\r\n\r\n    user1.interestsSent = user1.interestsSent.map((interest) => {\r\n      // First identify the interest object to be updated.\r\n      if (String(interest.interestReceiverId) === user2.oktaUserId) {\r\n        interest.isAccepted = true;\r\n      }\r\n      return interest;\r\n    });\r\n\r\n    /**=============================================================== */\r\n    await user1.save();\r\n    await user2.save();\r\n\r\n    await session.commitTransaction();\r\n    session.endSession();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Interest accepted!',\r\n    });\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Error accepting interest. Please try later!', 500));\r\n  }\r\n});\r\n\r\n// @desc   Decline an Interest\r\n// @route  PUT /api/v1/interests/decline?sender=oktaUserId1&receiver=oktaUserId2\r\n// @access Private\r\n\r\n// Receiver of an interest can decline an interest.\r\n// User 1 is sender & User 2 is receiver.\r\n// So, update isRejected to \"true\" in interest object in interestsReceived array of User2\r\n// Also, update isRejected to \"true\" in interest object in interestsSent array of User1\r\nexports.declineInterest = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.sender;\r\n  const oktaUserId2 = req.query.receiver;\r\n  const session = await User.startSession();\r\n\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n    /**=============================================================== */\r\n\r\n    user2.interestsReceived = user2.interestsReceived.map((interest) => {\r\n      // First identify the interest object which must be updated.\r\n      if (String(interest.interestSenderId) === user1.oktaUserId) {\r\n        interest.isRejected = true;\r\n      }\r\n      return interest;\r\n    });\r\n\r\n    // Also...\r\n    // Put update same interest object in interestsSent array of User1\r\n\r\n    user1.interestsSent = user1.interestsSent.map((interest) => {\r\n      // First identify the interest object to be updated.\r\n      if (String(interest.interestReceiverId) === user2.oktaUserId) {\r\n        interest.isRejected = true;\r\n      }\r\n      return interest;\r\n    });\r\n\r\n    /**=============================================================== */\r\n    await user1.save();\r\n    await user2.save();\r\n\r\n    await session.commitTransaction();\r\n    session.endSession();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Interest rejected!',\r\n    });\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Error rejecting interest. Please try later!', 500));\r\n  }\r\n});\r\n\r\n// @desc   Cancel an Interest\r\n// @route  PUT /api/v1/interests/cancel?sender=oktaUserId1&receiver=oktaUserId2\r\n// @access Private\r\nexports.cancelInterest = asyncHandler(async (req, res, next) => {\r\n  const oktaUserId1 = req.query.sender;\r\n  const oktaUserId2 = req.query.receiver;\r\n  const session = await User.startSession();\r\n\r\n  try {\r\n    session.startTransaction();\r\n\r\n    let user1 = await User.find({ oktaUserId: oktaUserId1 });\r\n    user1 = user1[0];\r\n    let user2 = await User.find({ oktaUserId: oktaUserId2 });\r\n    user2 = user2[0];\r\n\r\n    /**=============================================================== */\r\n\r\n    // Remove sent interest from user1's interestsSent array and\r\n    // Remove received interest from user2's interestsReceived array\r\n\r\n    // Only an unaccepted interest can be cancelled.\r\n    user1.interestsSent = user1.interestsSent.filter((interest) => {\r\n      if (interest.isAccepted === false && interest.interestReceiverId === oktaUserId2) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    user2.interestsReceived = user2.interestsReceived.filter((interest) => {\r\n      if (interest.isAccepted === false && interest.interestSenderId === oktaUserId1) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    /**=============================================================== */\r\n\r\n    await user1.save();\r\n    await user2.save();\r\n\r\n    await session.commitTransaction();\r\n    session.endSession();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Interest Cancelled!',\r\n    });\r\n  } catch (error) {\r\n    // If an error occurred, abort the whole transaction and\r\n    // undo any changes that might have happened\r\n    // console.log(error);\r\n    await session.abortTransaction();\r\n    session.endSession();\r\n    return next(new CustomErrorResponse('Could not cancel interest. Please try later!', 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\n\r\n// @desc   Get Recommendations\r\n// @route  GET /api/v1/recommendations/:oktaUserId\r\n// @access Private\r\nexports.getRecommendations = asyncHandler(async (req, res, next) => {\r\n  try {\r\n    const currentUser = await User.find({ oktaUserId: req.params.oktaUserId });\r\n\r\n    if (!currentUser) {\r\n      return next(new CustomErrorResponse(`User not found!`, 404));\r\n    }\r\n\r\n    const currentUserGender = currentUser[0].gender;\r\n    const currentUserAge = currentUser[0].age;\r\n    const currentUserReligion = currentUser[0].religion;\r\n\r\n    const profiles = await User.find({ gender: { $ne: currentUserGender } }).exec();\r\n\r\n    //Recommendations based on gender, age and religion\r\n    const recommendations = profiles.filter((profile) => {\r\n      return (\r\n        (currentUserGender === 'male' ? profile.age <= currentUserAge : profile.age >= currentUserAge) &&\r\n        (currentUserReligion ? profile.religion === currentUserReligion : true)\r\n      );\r\n    });\r\n\r\n    console.log('No. of Recommendations: ', recommendations.length);\r\n\r\n    if (recommendations.length < 1) {\r\n      res.status(200).json({\r\n        success: false,\r\n        message: 'Recommendations not found. Please update your age and religion to get recommendations.',\r\n        number: recommendations.length,\r\n        data: recommendations,\r\n      });\r\n      return;\r\n    }\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Recommendations found.',\r\n      number: recommendations.length,\r\n      data: recommendations,\r\n    });\r\n  } catch (error) {\r\n    return next(new CustomErrorResponse('Error!. Please try later!', 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\n\r\nconst MINIMUM_HEIGHT_IN_CMS = 122;\r\nconst MAXIMUM_HEIGHT_IN_CMS = 214;\r\nconst MINIMUM_ALLOWED_AGE = 21;\r\nconst MAXIMUM_ALLOWED_AGE = 50;\r\n\r\n// @desc   Search Profiles\r\n// @route  POST /api/v1/users/search/:oktaUserId\r\n// @access Private\r\n\r\nexports.searchProfiles = asyncHandler(async (req, res, next) => {\r\n  try {\r\n    console.log('search route has been hit...');\r\n    const currentUser = await User.find({ oktaUserId: req.params.oktaUserId });\r\n    console.log(req.body);\r\n    if (!currentUser) {\r\n      return next(new CustomErrorResponse(`User not found!`, 404));\r\n    }\r\n\r\n    const currentUserGender = currentUser[0].gender;\r\n\r\n    const searchCriteria = req.body;\r\n    console.log(searchCriteria);\r\n    // Remove properties with 'undefined' & \"null\" values before perfmorming search in DB\r\n    Object.keys(searchCriteria).forEach((key) => {\r\n      if (searchCriteria[key] === undefined || searchCriteria[key] === null) {\r\n        delete searchCriteria[key];\r\n      }\r\n    });\r\n\r\n    const { ageRange, city, country, heightRange, religion, marriageStatus, motherTongue, state } = searchCriteria;\r\n\r\n    const minAge = ageRange === undefined ? MINIMUM_ALLOWED_AGE : ageRange[0];\r\n    const maxAge = ageRange === undefined ? MAXIMUM_ALLOWED_AGE : ageRange[1];\r\n    const minHeight = heightRange === undefined ? MINIMUM_HEIGHT_IN_CMS : heightRange[0];\r\n    const maxHeight = heightRange === undefined ? MAXIMUM_HEIGHT_IN_CMS : heightRange[1];\r\n\r\n    // get profiles of opposite gender.\r\n    const profiles = await User.find({ gender: { $ne: currentUserGender } }).exec();\r\n\r\n    // filter opposite gender profiles as per search preferences.\r\n    const matchingProfiles = profiles.filter((profile) => {\r\n      return (\r\n        profile.age >= minAge &&\r\n        profile.age <= maxAge &&\r\n        profile.height >= minHeight &&\r\n        profile.height <= maxHeight &&\r\n        (city ? profile.location === city : true) &&\r\n        (country ? profile.country === country : true) &&\r\n        (motherTongue ? profile.motherTongue === motherTongue : true) &&\r\n        (marriageStatus ? profile.marriageStatus === marriageStatus : true) &&\r\n        (religion ? profile.religion === religion : true) &&\r\n        (state ? profile.state === state : true)\r\n      );\r\n    });\r\n\r\n    console.log('No. of Matches: ', matchingProfiles.length);\r\n\r\n    if (matchingProfiles.length < 1) {\r\n      res.status(200).json({\r\n        success: false,\r\n        message: 'Matches not found. Please adjust your search criteria',\r\n        number: matchingProfiles.length,\r\n        data: matchingProfiles,\r\n      });\r\n      return;\r\n    }\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Matches found.',\r\n      number: matchingProfiles.length,\r\n      data: matchingProfiles,\r\n    });\r\n  } catch (error) {\r\n    return next(new CustomErrorResponse('Error!. Please try later!', 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\nconst okta = require('@okta/okta-sdk-nodejs');\r\n\r\n// @desc   Shortlist Profiles\r\n// @route  PUT /api/v1/toggleShortlist?shortlister=oktaUserId1&shorlistee=oktaUserId2\r\n// @access Private\r\nexports.toggleShortlist = asyncHandler(async (req, res, next) => {\r\n  const shortlisterOktaId = req.query.shortlister;\r\n  const shortlisteeOktaId = req.query.shortlistee;\r\n  console.log(shortlisterOktaId);\r\n  console.log(shortlisteeOktaId);\r\n\r\n  try {\r\n    // user who wants to shortlist\r\n    let shortlister = await User.find({ oktaUserId: shortlisterOktaId });\r\n    shortlister = shortlister[0];\r\n\r\n    const { shortlistedMatches } = shortlister;\r\n\r\n    // user who is being shortlisted\r\n    let shortlistee = await User.find({ oktaUserId: shortlisteeOktaId });\r\n    shortlistee = shortlistee[0];\r\n\r\n    // Did shortlister already shortlist shortlistee ?\r\n    const wasAlreadyShortlisted = shortlister.shortlistedMatches.some((oktaId) => oktaId === shortlisteeOktaId);\r\n    // console.log(wasAlreadyShortlisted);\r\n\r\n    if (wasAlreadyShortlisted) {\r\n      // If Yes... then remove from shortlist\r\n      shortlister.shortlistedMatches = shortlister.shortlistedMatches.filter((oktaId) => oktaId !== shortlisteeOktaId);\r\n    } else {\r\n      // If No, then shortlist\r\n      shortlister.shortlistedMatches = [...shortlistedMatches, shortlisteeOktaId];\r\n    }\r\n\r\n    await shortlister.save();\r\n\r\n    const message = wasAlreadyShortlisted\r\n      ? `${shortlistee.name} has been removed from your shortlist`\r\n      : `${shortlistee.name} was added to your shortlisted profiles`;\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message,\r\n    });\r\n  } catch (error) {\r\n    return next(new CustomErrorResponse('Please try later', 500));\r\n  }\r\n});\r\n","const asyncHandler = require('../middleware/async');\r\nconst User = require('../models/Users');\r\nconst CustomErrorResponse = require('../utilities/errorResponse');\r\nconst okta = require('@okta/okta-sdk-nodejs');\r\n\r\n// @desc   Register a new Profile\r\n// @route  POST /api/v1/users/\r\n// @access Public\r\n/** ----------------------------------------- */\r\n\r\n\r\n//signing up user into okta\r\nexports.oktaSignUp = async (req, res, next) => {\r\n\r\n  let oldToken = \"00TW3soK2Eq883PaRVu5rjqRniqE6iaueZOivSe91P\"; \r\n  let newToken = \"005Rdx3XVIzg2sRAFbBi-QX2_PYZul-cpCulQRgxfw\"\r\n\r\n  try{\r\n    const client = new okta.Client({\r\n      orgUrl: 'https://dev-42684472.okta.com/',\r\n      token: newToken,\r\n    });\r\n    const body = req.body;\r\n    \r\n      // async function createUserInOkta() {\r\n        const response = await client.createUser(body);\r\n  \r\n        //will update it with destructure\r\n        const oktaId = response.id;\r\n        const name = `${response.profile.firstName} ${response.profile.lastName}`;\r\n        const gender = response.profile.gender;\r\n        const email = response.profile.email;\r\n  \r\n        const mongoUser = {\r\n          oktaUserId: oktaId,\r\n          name,\r\n          gender,\r\n          email,\r\n        };\r\n\r\n        \r\n  \r\n        //creting user in mongo db with data from the okta\r\n        const user = await User.create(mongoUser);\r\n  \r\n      res.status(200).send({\r\n        res: user,\r\n      });\r\n  }catch(err){\r\n   next(err);\r\n  }\r\n  \r\n};\r\n\r\n//find user in mongodb by oktaId\r\nasync function findUserByOktaId(oktaId) {\r\n  const currentUser = await User.find({ oktaUserId: oktaId })\r\n  return currentUser;\r\n}\r\n\r\n//getting userPrifileData\r\nexports.getUserProfile = asyncHandler(async (req, res, next) => {\r\n  const params = req.params;\r\n  const oktaId = params.id;\r\n  const currentUser = await findUserByOktaId(oktaId);\r\n  // const currentUser = await User.find({ oktaUserId: oktaId });\r\n  if (!currentUser) {\r\n    return next(new CustomErrorResponse(`User not found!`, 404));\r\n  }\r\n  res.status(200).json({ currentUser });\r\n});\r\n\r\n//to upload image in mongodb\r\nexports.uploadImageToMongoDb = asyncHandler(async (req, res, next) => {\r\n  const imageUrl = req.body.imageUrlString;\r\n  const currentUserId = req.body.oktaUserId;\r\n  const currentUser = await findUserByOktaId(currentUserId);\r\n  // console.log(currentUser[0].images);\r\n  const imageUrls = currentUser[0].images;\r\n\r\n  if (!currentUser) {\r\n    return next(new CustomErrorResponse(`User not found!`, 404));\r\n  }\r\n  await User.updateOne({ oktaUserId: currentUserId }, { images: [...imageUrls, imageUrl] });\r\n\r\n  res.status(200).json({ status: 'success' });\r\n});\r\n\r\n/** ----------------------------------------- */\r\nexports.updateUserProfile = asyncHandler(async (req, res, next) => {\r\n  const currentUserId = req.params.userId;\r\n\r\n  //getting mongodbId using oktaUserId\r\n  // const user = await findUserByOktaId(currentUserId);\r\n  // const mongoId = user[0]._id.toString()\r\n  // console.log(mongoId);\r\n\r\n  const body = req.body;\r\n\r\n  if(!body){\r\n    return next(new CustomErrorResponse(`req.body is empty`, 400));\r\n  }\r\n\r\n  if (!currentUserId) {\r\n    return next(new CustomErrorResponse(`Can't update data of non-existent user`, 400));\r\n  }\r\n  await User.updateOne({ oktaUserId: currentUserId }, { $set: body });\r\n  res.status(200).json({\r\n    success: true,\r\n    message: 'Updated User successfully',\r\n    data: 'user',\r\n  });\r\n});\r\n\r\n/** ----------------------------------------- */\r\n\r\n// @desc   Search Profiles\r\n// @route  GET /api/v1/users/search/\r\n// @access Private\r\n\r\nexports.searchProfiles = asyncHandler(async (req, res, next) => {\r\n  const searchCriteria = req.body;\r\n\r\n  // NOTE : WORK IN PROGRESS....\r\n\r\n  // Remove properties with 'undefined' values before perfmorming search in DB\r\n  Object.keys(searchCriteria).forEach((key) => {\r\n    if (searchCriteria[key] === undefined) {\r\n      delete searchCriteria[key];\r\n    }\r\n  });\r\n\r\n  let matchingProfiles = await User.find({ name: 'john', age: { $gte: 18 } }).exec();\r\n\r\n  // console.log(matchingProfiles);\r\n\r\n  if (matchingProfiles.length < 1) {\r\n    return next(new CustomErrorResponse(`Could not find matching profiles`, 400));\r\n  }\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    message: 'Updated User successfully',\r\n    data: matchingProfiles,\r\n  });\r\n});\r\n\r\nexports.deleteImage = asyncHandler(async (req, res, next) => {\r\n\r\n  const currentUserOktaId = req.params.userId;\r\n  const imageArrayIndex = req.params.index;\r\n\r\n  //geting currentUserData by OktaUserId\r\n  const currentUserProfile = await findUserByOktaId(currentUserOktaId);\r\n\r\n  //image deleting logic\r\n  currentUserProfile[0].images.splice(imageArrayIndex, 1);\r\n\r\n  await User.updateOne({ oktaUserId: currentUserOktaId }, { images: currentUserProfile[0].images });\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    message: 'Deleted user successfully',\r\n    data: 'user'\r\n  });\r\n  \r\n    res.status(400).json({\r\n      success: false,\r\n      message: 'Image is not deleted',\r\n      error: err\r\n    });\r\n  \r\n  // //geting currentUserData by OktaUserId\r\n  // const currentUserProfile = await findUserByOktaId(currentUserOktaId);\r\n\r\n  // //image deleting logic\r\n  // currentUserProfile[0].images.splice(imageArrayIndex, 1);\r\n\r\n  // await User.updateOne({ oktaUserId: currentUserOktaId }, { images: currentUserProfile[0].images });\r\n\r\n  // res.status(200).json({\r\n  //   success: true,\r\n  //   message: 'Deleted user successfully',\r\n  //   data: 'user'\r\n  // });\r\n\r\n})\r\n","const asyncHandler = fn => (req, res, next) => {\r\n  Promise.resolve(fn(req, res, next)).catch(next);\r\n};\r\n\r\nmodule.exports = asyncHandler;\r\n\r\n\r\n\r\n// This asyncHanlder() will wrap around all controller methods which do DB operations...\r\n// If there is an error in DB Operation, asyncHandler() catches that error...\r\n// Then passes it to errorHandler() middleware...\r\n// Then the errorHandler middleware gives JSON as response.\r\n","// All Errors in this Express Application come here...\r\n// as errorHandler() is middleware function...\r\n// This helps send a customized response after identifying the error.\r\nconst ErrorResponse = require('../utilities/errorResponse');\r\nconst errorHandler = (err, req, res, next) => {\r\n  let error = { ...err };\r\n  error.message = err.message;\r\n\r\n  //error handling for signup form\r\n  if(err.errorCode === \"E0000001\"){\r\n    handleDuplicateKeyError(err, res);\r\n    return next();\r\n  }\r\n\r\n  // Duplicate Phone/Email Used while Registration\r\n  if (err.code === 11000) {\r\n    const message = `Email / Phone already used for registration.`;\r\n    error = new ErrorResponse(message, 400); // 400 = bad request\r\n  }\r\n\r\n  if (err.code === 'E0000001') {\r\n    const message = `password: This password was found in a list of commonly used passwords. Please try another password.`;\r\n    error = new ErrorResponse(message, 400); // 400 = bad request\r\n  }\r\n\r\n  // Mongoose validation error\r\n  if (err.name === 'ValidationError') {\r\n    const message = Object.values(err.errors).map((val) => val.message);\r\n    console.log(message);\r\n    error = new ErrorResponse(message.join(' & '), 400);\r\n  }\r\n\r\n  res.json({\r\n    success: false,\r\n    error: error.message || 'Server Error',\r\n  });\r\n};\r\n\r\n//error handling for signup form\r\nconst handleDuplicateKeyError = (err, res) => {\r\n  if(err.errorSummary === \"Api validation failed: login\"){\r\n      res.status(409).json({ \r\n                      field : \"login\", \r\n                      message: `this user already exists in pesto matrimony.`\r\n              })\r\n  }else if(err.errorSummary === \"Api validation failed: password\"){\r\n      res.status(409).json({ \r\n          field : \"password\",  \r\n          message: `this user already exists in pesto matrimony.`\r\n  })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = errorHandler;\r\n","const mongoose = require('mongoose');\r\n\r\nconst MessageSchema = new mongoose.Schema({\r\n  messageSenderId: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  messageReceiverId: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  message: {\r\n    type: String,\r\n    trim: true,\r\n    maxlength: [500, 'Message can not be more than 500 characters'],\r\n  },\r\n  isRead: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  timeStamp: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    trim: true,\r\n    required: [true, 'Name is missing!'],\r\n    maxlength: [50, 'Name can not be more than 50 characters'],\r\n  },\r\n  gender: {\r\n    type: String,\r\n    required: [true, 'Gender is missing!'],\r\n    trim: true,\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Email is missing!'],\r\n    unique: true,\r\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please add a valid email'],\r\n  },\r\n  oktaUserId: {\r\n    type: String,\r\n    unique: true,\r\n    required: [true, 'Okta User Id is missing !'],\r\n  },\r\n  images: {\r\n    type: [String],\r\n    default: [],\r\n  },\r\n\r\n  // Personal Information\r\n\r\n  aboutMe: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  age: {\r\n    type: Number,\r\n    trim: true,\r\n    default: 21,\r\n  },\r\n  height: {\r\n    type: Number,\r\n    trim: true,\r\n    default: 140,\r\n  },\r\n  weight: {\r\n    type: Number,\r\n    trim: true,\r\n  },\r\n  physique: {\r\n    type: String,\r\n    default: '',\r\n    trim: true,\r\n  },\r\n  motherTongue: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  marriageStatus: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  citizenship: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  country: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  state: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  location: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  eatingHabits: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  smokingHabits: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  drinkingHabits: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  hobbies: {\r\n    type: [String],\r\n    default: [],\r\n  },\r\n  spokenLanguages: {\r\n    type: [String],\r\n    default: [],\r\n  },\r\n\r\n  // Education & Occupation Details\r\n\r\n  employer: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  income: {\r\n    type: Number,\r\n  },\r\n  occupation: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  qualification: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n\r\n  // Family Details\r\n\r\n  aboutFamily: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  brothers: {\r\n    type: Number,\r\n  },\r\n  familyStatus: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  marriedBrothers: {\r\n    type: Number,\r\n  },\r\n  marriedSisters: {\r\n    type: Number,\r\n  },\r\n  sisters: {\r\n    type: Number,\r\n  },\r\n\r\n  // Religious Details\r\n\r\n  dateOfBirth: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  timeOfBirth: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  gothram: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  placeOfBirth: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  religion: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n\r\n  zodiacSign: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n\r\n  // Preference Details\r\n\r\n  partnerAgeRange: {\r\n    type: [Number],\r\n    default: [21, 50],\r\n  },\r\n  partnerCountry: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  partnerEatingHabits: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  partnerHeightRange: {\r\n    type: [Number],\r\n    default: [],\r\n  },\r\n  partnerIncomeRange: {\r\n    type: [Number],\r\n    default: [],\r\n  },\r\n  partnerMaritalStatus: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  partnerMotherTongue: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n  partnerReligion: {\r\n    type: String,\r\n    trim: true,\r\n    default: '',\r\n  },\r\n\r\n  phone: {\r\n    type: String,\r\n    default: '',\r\n    trim: true,\r\n    maxlength: [20, 'Phone number can not be longer than 20 characters'],\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now(),\r\n  },\r\n  lastModifiedAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n  role: {\r\n    type: String,\r\n    default: 'User',\r\n    enum: ['User', 'Admin'],\r\n  },\r\n\r\n  //store Ids of all shortlisted users.\r\n  shortlistedMatches: {\r\n    type: [String],\r\n    default: [],\r\n  },\r\n\r\n  // for each interest received... a unique object is created.\r\n  // Subsequent messages \"to & from\" the sender are stored in conversations array inside the object.\r\n  interestsReceived: [\r\n    {\r\n      interestSenderAge: { type: Number },\r\n      interestSenderId: { type: String },\r\n      interestSenderImage: { type: String },\r\n      interestSenderName: { type: String },\r\n      interestReceiverAge: { type: Number },\r\n      interestReceiverId: { type: String },\r\n      interestReceiverImage: { type: String },\r\n      interestReceiverName: { type: String },\r\n      isAccepted: { type: Boolean, default: false },\r\n      isRejected: { type: Boolean, default: false },\r\n      conversations: [MessageSchema],\r\n    },\r\n  ],\r\n\r\n  // for each interest sent... a unique object is created...\r\n  // Subsequent messages \"to & from\" the receiver are stored in conversations array inside the object\r\n  interestsSent: [\r\n    {\r\n      interestSenderAge: { type: Number },\r\n      interestSenderId: { type: String },\r\n      interestSenderImage: { type: String },\r\n      interestSenderName: { type: String },\r\n      interestReceiverAge: { type: Number },\r\n      interestReceiverId: { type: String },\r\n      interestReceiverImage: { type: String },\r\n      interestReceiverName: { type: String },\r\n      isAccepted: { type: Boolean, default: false },\r\n      isRejected: { type: Boolean, default: false },\r\n      conversations: [MessageSchema],\r\n    },\r\n  ],\r\n});\r\n\r\nmodule.exports = mongoose.model('User', UserSchema);\r\n","const express = require('express');\r\n\r\n//importing controllers\r\nconst { getAllUsersProfiles } = require('../controllers/admin');\r\n\r\nconst router = express.Router();\r\n\r\n//getting all users of pesto-matrimony\r\nrouter.route('/getallusers').get(getAllUsersProfiles);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\nconst { getMessages, sendMessage, markMessagesAsRead } = require('../controllers/conversations');\r\n\r\nconst router = express.Router();\r\n\r\n// '/' in this router is equivalent to  '/api/v1/conversations'\r\n\r\n// A message is an object in conversations array.\r\n// All of these controller functions are working on that conversations array.\r\nrouter.route('/').post(sendMessage).put(markMessagesAsRead);\r\n\r\nrouter.route('/:oktaUserId').get(getMessages);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\nconst { acceptInterest, cancelInterest, declineInterest, sendInterest } = require('../controllers/interests');\r\n\r\nconst router = express.Router();\r\n\r\n// '/' in this router is equivalent to  '/api/v1/interests'\r\n\r\nrouter.route('/').post(sendInterest);\r\n\r\nrouter.route('/accept').put(acceptInterest);\r\n\r\nrouter.route('/cancel').put(cancelInterest);\r\n\r\nrouter.route('/decline').put(declineInterest);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst { getRecommendations } = require('../controllers/recommendations');\r\n\r\n// '/' in this router is equivalent to  '/api/v1/recommendations'\r\n\r\nrouter.route('/:oktaUserId').get(getRecommendations);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst { searchProfiles } = require('../controllers/search');\r\n\r\n// '/' in this router is equivalent to  '/api/v1/search'\r\n\r\nrouter.route('/:oktaUserId').post(searchProfiles);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst { toggleShortlist } = require('../controllers/shortlist');\r\n\r\n// '/' in this router is equivalent to  '/api/v1/toggleShortlist'\r\n\r\nrouter.route('/').put(toggleShortlist);\r\n\r\nmodule.exports = router;\r\n","const express = require('express');\r\n\r\nconst {\r\n  getUserProfile,\r\n  uploadImageToMongoDb,\r\n  updateUserProfile,\r\n  oktaSignUp,\r\n  searchProfiles,\r\n  deleteImage\r\n} = require('../controllers/users');\r\n\r\nconst router = express.Router();\r\n\r\n// '/' in this router is equivalent to  '/api/v1/users'\r\n\r\n// Signup\r\nrouter.route('/oktasignup').post(oktaSignUp);\r\nrouter.route('/userprofile/:id').get(getUserProfile);\r\nrouter.route('/imageupload').post(uploadImageToMongoDb);\r\n\r\n//it was running for the admin\r\n// router.route('/getallusers').get(getAllUsersProfiles)\r\n\r\n// Update / Delete\r\nrouter.route('/:userId').put(updateUserProfile);\r\n\r\n// Fetch User Profiles\r\nrouter.route('/search').get(searchProfiles);\r\n\r\nrouter.route('/delete-image/:userId/:index').delete(deleteImage);\r\n\r\n// Have to create another route & controller function for...\r\n// handling search and filters with pagination..\r\n// This route will have a lot of complex logic.\r\n\r\n// updateUserProfile will only be used to update Profile details...\r\n// NOT messages... although it is possible...\r\n// For message flow... a separate route (conversations) is present\r\n// Update\r\nrouter.route('/:userId').put(updateUserProfile);\r\n\r\nmodule.exports = router;\r\n","class CustomErrorResponse extends Error {\r\n  constructor(message, statusCode) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n  }\r\n}\r\n\r\nmodule.exports = CustomErrorResponse;\r\n","module.exports = require(\"@okta/okta-sdk-nodejs\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"@sentry/tracing\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const cors = require('cors');\r\nconst express = require('express');\r\nconst dbConnection = require('./config/database');\r\nconst errorHandler = require('./middleware/error');\r\n// const errMiddleware = require('./middleware/errMiddleware');\r\nconst bodyParser = require('body-parser');\r\nconst Sentry = require('@sentry/node');\r\nconst Tracing = require('@sentry/tracing');\r\n\r\n// Connect to MongoDB\r\ndbConnection();\r\n\r\n// Start Express Server\r\nconst app = express();\r\n\r\n// *****************Sentry Code Start*****************\r\n// Sentry.init({\r\n//   dsn: 'https://e1d7d0bf5be74e7b99f42b24a991095a@o1408574.ingest.sentry.io/6744194',\r\n//   integrations: [\r\n//     // enable HTTP calls tracing\r\n//     new Sentry.Integrations.Http({ tracing: true }),\r\n//     // enable Express.js middleware tracing\r\n//     new Tracing.Integrations.Express({ app }),\r\n//   ],\r\n\r\n//   // Set tracesSampleRate to 1.0 to capture 100%\r\n//   // of transactions for performance monitoring.\r\n//   // We recommend adjusting this value in production\r\n//   tracesSampleRate: 1.0,\r\n// });\r\n\r\n// RequestHandler creates a separate execution context using domains, so that every\r\n// transaction/span/breadcrumb is attached to its own Hub instance\r\n// app.use(Sentry.Handlers.requestHandler());\r\n// // TracingHandler creates a trace for every incoming request\r\n// app.use(Sentry.Handlers.tracingHandler());\r\n\r\n// *****************Sentry Code End*****************\r\n\r\napp.use(cors());\r\n\r\napp.use(express.json());\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n// parse application/json\r\napp.use(bodyParser.json());\r\n\r\n// importing routes\r\nconst admin = require('./routes/admin.js');\r\nconst conversations = require('./routes/conversations.js');\r\nconst interests = require('./routes/interests.js');\r\nconst recommendations = require('./routes/recommendations.js');\r\nconst search = require('./routes/search.js');\r\nconst toggleShortlist = require('./routes/shortlist.js');\r\nconst users = require('./routes/users.js');\r\n\r\n// mounting routes\r\napp.use('/api/v1/admin', admin);\r\napp.use('/api/v1/conversations', conversations);\r\napp.use('/api/v1/interests', interests);\r\napp.use('/api/v1/recommendations', recommendations);\r\napp.use('/api/v1/search', search);\r\napp.use('/api/v1/toggleShortlist', toggleShortlist);\r\napp.use('/api/v1/users', users);\r\n\r\nconsole.log('mounting routes completed...');\r\n\r\n// *****************Sentry Related*****************\r\n// Sentry Error Handler\r\n// The error handler must be before any other error middleware and after all controllers\r\n// app.use(Sentry.Handlers.errorHandler());\r\n\r\n// *****************Sentry Related*****************\r\n\r\n// Custom Error Handler\r\n//Handling Unhandled routes. it should be placed after the routes.\r\n// app.all('*', (req, res, next) => {\r\n//   res.status(404).json({\r\n//     status: 'fail',\r\n//     message: `Can't find ${req.originalUrl} on this server !`,\r\n//   });\r\n// });\r\n\r\n// error Handling middlewre.\r\napp.use(errorHandler);\r\n// app.use(errMiddleware);\r\n\r\nconst server = app.listen(\r\n  process.env.PORT || 8000,\r\n  console.log(`Server is listening on port : ${process.env.PORT || 8000}\\nMode: ${process.env.NODE_ENV.toUpperCase()}`)\r\n);\r\n\r\n// Error in connecting to MongoDB triggers unhandledRejection at global level\r\n// That is being handled here. This stops server if MongoDB is NOT connected.\r\nprocess.on('unhandledRejection', (err, promise) => {\r\n  console.log(`Error: ${err.message}`);\r\n  server.close(() => process.exit(1));\r\n});\r\n"],"names":[],"sourceRoot":""}